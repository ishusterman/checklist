# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-08-08 10:21
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import select2.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CheckList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('num_room', models.PositiveIntegerField(verbose_name='Номер операционной')),
                ('number', models.PositiveIntegerField(verbose_name='Номер по порядку')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Дата операции')),
                ('time', models.TimeField(default='10:00', verbose_name='Время подачи пациента в операционную')),
                ('oper_start', models.TimeField(default='10:00', verbose_name='Время начала операции')),
                ('doctor_come_time', models.TimeField(default='10:00', verbose_name='Время прихода врачей')),
                ('anesthes_come_time', models.TimeField(default='10:00', verbose_name='Время прихода анестезиолога')),
                ('oper_finish', models.TimeField(default='10:00', verbose_name='Время завершения операции')),
                ('queue', models.PositiveIntegerField(default=0, verbose_name='Очередь')),
                ('duration', models.DurationField(default=0, verbose_name='Продолжительность')),
                ('plan', models.BooleanField(default=True, verbose_name='Плановая')),
                ('vmp_rf', models.BooleanField(default=False, verbose_name='ВМП РФ')),
                ('vmp_rb', models.BooleanField(default=False, verbose_name='ВМП РБ')),
                ('doctor', models.CharField(max_length=50, verbose_name='Хирург')),
                ('doctor2', models.CharField(blank=True, max_length=50, verbose_name='Второй хирург')),
                ('assistent', models.CharField(blank=True, max_length=50, verbose_name='Ассистент')),
                ('anesthes', models.CharField(blank=True, max_length=50, verbose_name='Анестезиолог')),
                ('nurse', models.CharField(blank=True, max_length=50, verbose_name='Медсестра')),
                ('nurse_a', models.CharField(blank=True, max_length=50, verbose_name='Медсестра анестезист')),
                ('nurse2', models.CharField(blank=True, max_length=50, verbose_name='Санитарка')),
                ('patient', models.CharField(max_length=50, verbose_name='ФИО пациента')),
                ('num_ib', models.PositiveIntegerField(blank=True, default=0, verbose_name='№ истории болезни')),
                ('gender', models.CharField(choices=[('муж', 'муж'), ('жен', 'жен')], default='муж', max_length=3, verbose_name='Пол')),
                ('age', models.IntegerField(blank=True, default=0, verbose_name='Возраст')),
                ('allergy', models.BooleanField(default=False, verbose_name='Аллергия')),
                ('rw', models.BooleanField(default=False, verbose_name='RW')),
                ('aids', models.BooleanField(default=False, verbose_name='AIDS')),
                ('vgv', models.BooleanField(default=False, verbose_name='VGV')),
                ('vgs', models.BooleanField(default=False, verbose_name='VGS')),
                ('tbs', models.BooleanField(default=False, verbose_name='VGS')),
                ('anaerobic_b', models.BooleanField(default=False, verbose_name='Анаэробная инфекция')),
                ('anaerobic_n', models.CharField(blank=True, max_length=50, verbose_name='Анаэробная инфекция')),
                ('repeat_oper', models.BooleanField(default=False, verbose_name='Повторная опреация')),
                ('p_date', models.DateField(blank=True, null=True, verbose_name='Дата предыдущей операции')),
                ('p_organization', models.CharField(blank=True, max_length=50, verbose_name='Название организации (предыдущ. операции)')),
                ('p_oper', models.CharField(blank=True, max_length=50, verbose_name='Название предыдущей операции')),
                ('after_oper_bag', models.CharField(blank=True, max_length=50, verbose_name='Послеоперационные осложнения предыдущей операции')),
                ('restrict_f', models.BooleanField(default=False, verbose_name='Опер. поле огранич. однораз. стерил. бельем')),
                ('b_o_count', models.BooleanField(default=False, verbose_name='До начала операции произведен подсчет кол-ва инструментов, салфеток и игл')),
                ('a_c_count', models.BooleanField(default=False, verbose_name='Перед закрытием операционной раны произведен подсчет кол-ва инструментов, салфеток и игл')),
                ('blade11', models.PositiveIntegerField(blank=True, default=0, verbose_name='Лезвия №11')),
                ('blade15', models.PositiveIntegerField(blank=True, default=0, verbose_name='Лезвия №15')),
                ('blade23', models.PositiveIntegerField(blank=True, default=0, verbose_name='Лезвия №23')),
                ('drains', models.PositiveIntegerField(blank=True, default=0, verbose_name='Дренажи')),
                ('bandage', models.PositiveIntegerField(blank=True, default=0, verbose_name='Повязки')),
                ('gem_mat', models.PositiveIntegerField(blank=True, default=0, verbose_name='Гем. мат.')),
                ('clips', models.PositiveIntegerField(blank=True, default=0, verbose_name='Клипсы')),
                ('filter', models.PositiveIntegerField(blank=True, default=0, verbose_name='Фильтры')),
                ('cassete', models.PositiveIntegerField(blank=True, default=0, verbose_name='Кассеты')),
                ('catheter', models.PositiveIntegerField(blank=True, default=0, verbose_name='Катеторы')),
                ('band', models.PositiveIntegerField(blank=True, default=0, verbose_name='Бинты')),
                ('napkin_big', models.PositiveIntegerField(blank=True, default=0, verbose_name='Салфетки большие')),
                ('napkin_avg', models.PositiveIntegerField(blank=True, default=0, verbose_name='Салфетки средние')),
                ('napkin_sml', models.PositiveIntegerField(blank=True, default=0, verbose_name='Салфетки маленькие')),
                ('gloves_st', models.PositiveIntegerField(blank=True, default=0, verbose_name='Перчатки стерильные')),
                ('gloves_no_st', models.PositiveIntegerField(blank=True, default=0, verbose_name='Перчатки нестерильные')),
                ('chain_gloves', models.PositiveIntegerField(blank=True, default=0, verbose_name='Кольчужные перчатки')),
                ('disposable_underwear', models.PositiveIntegerField(blank=True, default=0, verbose_name='Одноразовое белье')),
                ('incident', models.BooleanField(default=False, verbose_name='Авария')),
                ('inc_doctor', models.BooleanField(default=False, verbose_name='Инцидент с хирургом')),
                ('inc_anesthes', models.BooleanField(default=False, verbose_name='Инцидент с анестезиологом')),
                ('inc_nurse_a', models.BooleanField(default=False, verbose_name='Инцидент с медсестрой-анестезист')),
                ('inc_nurse', models.BooleanField(default=False, verbose_name='Инцидент с оперционной медсестрой')),
                ('inc_nurse2', models.BooleanField(default=False, verbose_name='Инцидент с санитаркой')),
                ('inc_cut', models.BooleanField(default=False, verbose_name='Порез, укол')),
                ('inc_blood_skin', models.BooleanField(default=False, verbose_name='Попадание крови или др. биологических метериалов на кожные покровы')),
                ('inc_blood_lips', models.BooleanField(default=False, verbose_name='Попадание крови или др. биологических метериалов на слизистую глаз, носа,рта')),
                ('inc_blood_robe', models.BooleanField(default=False, verbose_name='Попадание крови или др. биологических метериалов на кожные покровы')),
                ('inc_drugs', models.BooleanField(default=False, verbose_name='Начат прием антиретровирусных препаратов в целях постконтактной профилактики заражения ВИЧ')),
                ('inc_action', models.BooleanField(default=False, verbose_name='Проведены мероприятия при аварийной ситуации согласно приказа №174 от 30.01 .2012 "Об экстренной профилактике заражения ВИЧ-инфекцией"')),
                ('inc_message', models.BooleanField(default=False, verbose_name='Сообщено руководителю подразделения, его заместителю или вышестоящему руководителю')),
                ('inc_act', models.BooleanField(default=False, verbose_name='Составлен "Акт о несчастном случае на производстве"')),
                ('inc_log', models.BooleanField(default=False, verbose_name='Заполнен "Журнал регистрации несчастных случаев на производстве"')),
                ('tmp', models.PositiveIntegerField(blank=True, default=0, verbose_name='временное поле для загрузки')),
                ('Add', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Чеклист',
                'verbose_name_plural': 'Чеклисты',
            },
        ),
        migrations.CreateModel(
            name='equip_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CheckList_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.CheckList')),
            ],
            options={
                'verbose_name': 'Используемое оборудование',
                'verbose_name_plural': 'Используемое оборудование',
            },
        ),
        migrations.CreateModel(
            name='implant_detail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CheckList_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.CheckList')),
            ],
            options={
                'verbose_name': 'Имплант и протезы',
                'verbose_name_plural': 'Имланты и протезы',
            },
        ),
        migrations.CreateModel(
            name='no_resorption_mat_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(blank=True, default=0, verbose_name='Кол-во')),
                ('CheckList_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.CheckList')),
            ],
            options={
                'verbose_name': 'Кол-во нерассасывающего шовного материала',
                'verbose_name_plural': 'Кол-во нерассасывающего шовного материала',
            },
        ),
        migrations.CreateModel(
            name='resorption_mat_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(blank=True, default=0, verbose_name='Кол-во')),
                ('CheckList_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.CheckList')),
            ],
            options={
                'verbose_name': 'Кол-во рассасывающего шовного материала',
                'verbose_name_plural': 'Кол-во рассасывающего шовного материала',
            },
        ),
        migrations.CreateModel(
            name='s_antiseptic',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('antiseptic', models.CharField(blank=True, max_length=50, verbose_name='Обработка рук персонала проведена антисептиком')),
            ],
            options={
                'verbose_name': 'Антисептик для обработки рук',
                'verbose_name_plural': 'Антисептики для обработки рук',
            },
        ),
        migrations.CreateModel(
            name='s_antiseptic_f',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('antiseptic_f', models.CharField(blank=True, max_length=50, verbose_name='Обработка операционного поля')),
            ],
            options={
                'verbose_name': 'Антисептик для операционного поля',
                'verbose_name_plural': 'Антисептики для операционного поля',
            },
        ),
        migrations.CreateModel(
            name='s_dept',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dept', models.CharField(blank=True, max_length=50, verbose_name='Отделение')),
            ],
            options={
                'verbose_name': 'Отделение',
                'verbose_name_plural': 'Отделения',
            },
        ),
        migrations.CreateModel(
            name='s_equip',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('equip', models.CharField(blank=True, max_length=50, verbose_name='Оборудование')),
            ],
            options={
                'verbose_name': 'Оборудование',
                'verbose_name_plural': 'Оборудование',
            },
        ),
        migrations.CreateModel(
            name='s_implant',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('implant', models.CharField(blank=True, max_length=100, verbose_name='Имплант')),
            ],
            options={
                'verbose_name': 'Имплант',
                'verbose_name_plural': 'Импланты',
            },
        ),
        migrations.CreateModel(
            name='s_inf',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('inf', models.CharField(blank=True, max_length=50, verbose_name='Степень инфицированности')),
            ],
            options={
                'verbose_name': 'Степень инфицированности',
                'verbose_name_plural': 'Степени инфицированности',
            },
        ),
        migrations.CreateModel(
            name='s_no_resorption_mat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('no_resorption_mat', models.CharField(blank=True, max_length=50, verbose_name='Нерассасывающийся материал')),
            ],
            options={
                'verbose_name': 'Шовный материал не рассасывающийся',
                'verbose_name_plural': 'Шовный материал не рассасывающийся',
            },
        ),
        migrations.CreateModel(
            name='s_oper',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('oper', models.CharField(blank=True, max_length=50, verbose_name='Операция')),
            ],
            options={
                'verbose_name': 'Операция',
                'verbose_name_plural': 'Операции',
            },
        ),
        migrations.CreateModel(
            name='s_position',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(blank=True, max_length=50, verbose_name='Положение пациента')),
            ],
            options={
                'verbose_name': 'Положение пациента',
                'verbose_name_plural': 'Положения пациента',
            },
        ),
        migrations.CreateModel(
            name='s_resorption_mat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('resorption_mat', models.CharField(blank=True, max_length=50, verbose_name='Рассасывающийся материал')),
            ],
            options={
                'verbose_name': 'Шовный материал рассасывающийся',
                'verbose_name_plural': 'Шовный материал рассасывающийся',
            },
        ),
        migrations.CreateModel(
            name='s_technik',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('technik', models.CharField(blank=True, max_length=50, verbose_name='По технике выполнения')),
            ],
            options={
                'verbose_name': 'Техника выполнения',
                'verbose_name_plural': 'Техника выполнения',
            },
        ),
        migrations.AddField(
            model_name='resorption_mat_count',
            name='resorption_mat_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_resorption_mat', verbose_name='Рассасывающийся шовный материал'),
        ),
        migrations.AddField(
            model_name='no_resorption_mat_count',
            name='no_resorption_mat_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_no_resorption_mat', verbose_name='Нерассасывающийся шовный материал'),
        ),
        migrations.AddField(
            model_name='implant_detail',
            name='implant_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_implant', verbose_name='Импланти протезы'),
        ),
        migrations.AddField(
            model_name='equip_detail',
            name='equip_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_equip', verbose_name='Используемое оборудование'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='antiseptic',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_antiseptic', verbose_name='Обработка рук персонала проведена антисептиком'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='antiseptic_f',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_antiseptic_f', verbose_name='Обработка операционного поля'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='dept',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_dept', verbose_name='Отделение'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='equip',
            field=models.ManyToManyField(through='db_checklist.equip_detail', to='db_checklist.s_equip'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='implant',
            field=models.ManyToManyField(through='db_checklist.implant_detail', to='db_checklist.s_implant'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='inf',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_inf', verbose_name='Степень инфицированности'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='no_resorption_mat',
            field=models.ManyToManyField(through='db_checklist.no_resorption_mat_count', to='db_checklist.s_no_resorption_mat'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='oper',
            field=select2.fields.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_oper', verbose_name='Операция'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='position',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_position', verbose_name='Положение пациента'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='resorption_mat',
            field=models.ManyToManyField(through='db_checklist.resorption_mat_count', to='db_checklist.s_resorption_mat'),
        ),
        migrations.AddField(
            model_name='checklist',
            name='technik',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='db_checklist.s_technik', verbose_name='Техника выполнения'),
        ),
    ]
